{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","isChecked","selectedGood","handleClick","e","setState","currentTarget","parentElement","nextElementSibling","textContent","clearButton","this","className","type","onClick","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,aAAc,OAHlB,EAMEC,YAAc,SAACC,GAA4C,IAAD,IACxD,EAAKC,SAAS,CACZJ,WAAW,EACXC,cAAc,UAAAE,EAAEE,cAAcC,qBAAhB,mBAA+BC,0BAA/B,eAAmDC,cAAe,MATtF,EAaEC,YAAc,kBACZ,EAAKL,SAAS,CAAEJ,WAAW,KAd/B,4CAgBE,WAAU,IAAD,OACP,EAAoCU,KAAKX,MAAjCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAEnB,OACE,uBAAMU,UAAU,oBAAhB,UACGX,EAEG,qBAAIW,UAAU,sCAAd,oBACMV,EADN,gBAIE,wBACE,UAAQ,cACRW,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKD,iBAIlB,oBAAIE,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCAEGd,EAAMiB,KAAI,SAACC,GACV,OACE,qBAEE,UAAQ,OACRJ,UAAWV,IAAiBc,EACxB,+BAAiC,GAJvC,UAME,6BACE,wBACE,UAAQ,eACRH,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKX,YAJhB,SAMGD,IAAiBc,EAAO,IAAM,QAInC,oBAAI,UAAQ,YAAYJ,UAAU,eAAlC,SACGI,MAjBEA,iBA3CvB,GAAyBC,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a92e72a0.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isChecked: boolean;\n  selectedGood: string;\n};\n\nexport class App extends React.Component <{}, State> {\n  state = {\n    isChecked: true,\n    selectedGood: 'Jam',\n  };\n\n  handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    this.setState({\n      isChecked: true,\n      selectedGood: e.currentTarget.parentElement?.nextElementSibling?.textContent || '', //eslint-disable-line\n    });\n  };\n\n  clearButton = () => (\n    this.setState({ isChecked: false }));\n\n  render() {\n    const { isChecked, selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {isChecked\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clearButton}\n              />\n            </h1>\n          )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n\n            {goods.map((item: string) => {\n              return (\n                <tr\n                  key={item}\n                  data-cy=\"Good\"\n                  className={selectedGood === item\n                    ? 'has-background-success-light' : ''}\n                >\n                  <td>\n                    <button\n                      data-cy=\"RemoveButton\"\n                      type=\"button\"\n                      className=\"button is-info\"\n                      onClick={this.handleClick}\n                    >\n                      {selectedGood === item ? '-' : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {item}\n                  </td>\n                </tr>\n              );\n            })}\n\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}